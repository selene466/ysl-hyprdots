
# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# Main modifier
$mainMod = SUPER # windows key

# assign apps
$term = kitty
$editor = code --ozone-platform-hint=wayland
$file = dolphin
$browser = microsoft-edge-stable

# Window/Session actions
# bind = $CONTROL, Q, exec, ~/.config/hypr/scripts/dontkillsteam.sh # killactive, kill the window on focus
bind = $mainMod, Q, exec, ~/.config/hypr/scripts/dontkillsteam.sh # killactive, kill the window on focus
bind = ALT, F4, exec, ~/.config/hypr/scripts/dontkillsteam.sh # killactive, kill the window on focus
bind = $mainMod ALT, delete, exit, # kill hyperland session
bind = $mainMod, W, togglefloating, # toggle the window on focus to float
bind = $mainMod, G, togglegroup, # toggle the window on focus to float
bind = $mainMod, return, fullscreen, # toggle the window on focus to fullscreen
bind = $mainMod, L, exec, swaylock # lock screen
bind = $mainMod, backspace, exec, ~/.config/hypr/scripts/logoutlaunch.sh 1 # logout menu
bind = $CONTROL, ESCAPE, exec, killall waybar || waybar # toggle waybar

# Application shortcuts
bind = $mainMod, X, exec, $term  # open terminal
bind = $mainMod, E, exec, $file # open file manager
bind = $mainMod, C, exec, $editor # open vscode
bind = $mainMod, Space, exec, microsoft-edge-stable --profile-directory='Profile 8' # open default profile
bind = $mainMod ALT, Space, exec, microsoft-edge-stable --profile-directory='Profile 9'# open college profile
bind = $mainMod, slash, exec, microsoft-edge-stable --profile-directory='Profile 10' # open tmp profile
bind = $mainMod, F, exec, firefox
bind = $mainMod ALT, F, exec, firefox -P Yash --private-window
bind = $CONTROL SHIFT, ESCAPE, exec, ~/.config/hypr/scripts/sysmonlaunch.sh  # open htop/btop if installed or default to top (system monitor)

# Rofi is toggled on/off if you repeat the key presses
bind = $mainMod ALT, A, exec, pkill -x rofi || ~/.config/hypr/scripts/rofilaunch.sh d # launch desktop applications
# bind = $mainMod, tab, exec, pkill -x rofi || ~/.config/hypr/scripts/rofilaunch.sh w # switch between desktop applications

bind = $mainMod, tab, exec, ags -t overview

bind = $mainMod, R, exec, pkill -x rofi || ~/.config/hypr/scripts/rofilaunch.sh f # browse system files

# Audio control
bindl  =$mainMod , F10, exec, ~/.config/hypr/scripts/volumecontrol.sh -o m # toggle audio mute
bindel = $mainMod, F11, exec, ~/.config/hypr/scripts/volumecontrol.sh -o d # decrease volume
bindel = $mainMod, F12, exec, ~/.config/hypr/scripts/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioMute, exec, ~/.config/hypr/scripts/volumecontrol.sh -o m # toggle audio mute
bindl  = , XF86AudioMicMute, exec, ~/.config/hypr/scripts/volumecontrol.sh -i m # toggle microphone mute
bindel = , XF86AudioLowerVolume, exec, ~/.config/hypr/scripts/volumecontrol.sh -o d # decrease volume
bindel = , XF86AudioRaiseVolume, exec, ~/.config/hypr/scripts/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioPlay, exec, playerctl play-pause
bindl  = , XF86AudioPause, exec, playerctl play-pause
bindl  = , XF86AudioNext, exec, playerctl next
bindl  = , XF86AudioPrev, exec, playerctl previous

# # Brightness control
# bindel = , XF86MonBrightnessUp, exec, ~/.config/hypr/scripts/brightnesscontrol.sh i # increase brightness
# bindel = , XF86MonBrightnessDown, exec, ~/.config/hypr/scripts/brightnesscontrol.sh d # decrease brightness

# Screenshot/Screencapture
bind = $mainMod, P, exec, ~/.config/hypr/scripts/screenshot.sh s # drag to snip an area / click on a window to print it
bind = $mainMod ALT, P, exec, ~/.config/hypr/scripts/screenshot.sh m # print focused monitor
bind = ,print, exec, ~/.config/hypr/scripts/screenshot.sh p  # print all monitor outputs

# Exec custom scripts
bind = $mainMod ALT, G, exec, ~/.config/hypr/scripts/gamemode.sh # disable hypr effects for gamemode
#bind = $mainMod ALT, right, exec, ~/.config/hypr/scripts/swwwallpaper.sh -n # next wallpaper
#bind = $mainMod ALT, left, exec, ~/.config/hypr/scripts/swwwallpaper.sh -p # previous wallpaper
# bind = $mainMod SHIFT ALT, up, exec, ~/.config/hypr/scripts/wbarconfgen.sh n # next waybar mode
#bind = $mainMod ALT, down, exec, ~/.config/hypr/scripts/wbarconfgen.sh p # previous waybar mode
bind = $mainMod SHIFT, D, exec, ~/.config/hypr/scripts/wallbashtoggle.sh  # toggle wallbash on/off
# bind = $mainMod SHIFT, T, exec, pkill -x rofi || ~/.config/hypr/scripts/themeselect.sh # theme select menu
# bind = $mainMod SHIFT, A, exec, pkill -x rofi || ~/.config/hypr/scripts/rofiselect.sh # rofi style select menu
bind = $mainMod SHIFT, W, exec, pkill -x rofi || ~/.config/hypr/scripts/swwwallselect.sh # rofi wall select menu
bind = $mainMod, V, exec, pkill -x rofi || ~/.config/hypr/scripts/cliphist.sh c  # open Pasteboard in screen center
bind = $mainMod ALT, V, exec, pkill -x rofi || ~/.config/hypr/scripts/cliphist.sh w # clear clipboard
#bind = $mainMod, K, exec, ~/.config/hypr/scripts/keyboardswitch.sh # change keyboard layout
bind = $mainMod, K, exec, ~/.config/hypr/scripts/IMP/transparent-windows/transp.sh
bind = $mainMod ALT, K, exec, ~/.config/hypr/scripts/IMP/opaque-windows/opq.sh

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = ALT, Tab, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

bind = $mainMod NUM_LOCK, 87, workspace, 1
bind = $mainMod NUM_LOCK, 88, workspace, 2
bind = $mainMod NUM_LOCK, 89, workspace, 3
bind = $mainMod NUM_LOCK, 83, workspace, 4
bind = $mainMod NUM_LOCK, 84, workspace, 5
bind = $mainMod NUM_LOCK, 85, workspace, 6
bind = $mainMod NUM_LOCK, 79, workspace, 7
bind = $mainMod NUM_LOCK, 80, workspace, 8
bind = $mainMod NUM_LOCK, 81, workspace, 9

# Switch workspaces relative to the active workspace with mainMod + CTRL + [←→]
bind = $mainMod CTRL, right, workspace, r+1 
bind = $mainMod CTRL, left, workspace, r-1

# move to the first empty workspace instantly with mainMod + CTRL + [↓]
bind = $mainMod CTRL, down, workspace, empty 

# Resize windows
binde = $mainMod SHIFT, right, resizeactive, 30 0
binde = $mainMod SHIFT, left, resizeactive, -30 0
binde = $mainMod SHIFT, up, resizeactive, 0 -30
binde = $mainMod SHIFT, down, resizeactive, 0 30

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod SHIFT NUM_LOCK, 87, movetoworkspace, 1
bind = $mainMod SHIFT NUM_LOCK, 88, movetoworkspace, 2
bind = $mainMod SHIFT NUM_LOCK, 89, movetoworkspace, 3
bind = $mainMod SHIFT NUM_LOCK, 83, movetoworkspace, 4
bind = $mainMod SHIFT NUM_LOCK, 84, movetoworkspace, 5
bind = $mainMod SHIFT NUM_LOCK, 85, movetoworkspace, 6
bind = $mainMod SHIFT NUM_LOCK, 79, movetoworkspace, 7
bind = $mainMod SHIFT NUM_LOCK, 80, movetoworkspace, 8
bind = $mainMod SHIFT NUM_LOCK, 81, movetoworkspace, 9

# Move active window to a relative workspace with mainMod + CTRL + ALT + [←→]
bind = $mainMod CTRL ALT, right, movetoworkspace, r+1
bind = $mainMod CTRL ALT, left, movetoworkspace, r-1

# Move active window around current workspace with mainMod + SHIFT + CTRL [←→↑↓]
# bind = $mainMod SHIFT $CONTROL, left, movewindow, l
# bind = $mainMod SHIFT $CONTROL, right, movewindow, r
# bind = $mainMod SHIFT $CONTROL, up, movewindow, u
# bind = $mainMod SHIFT $CONTROL, down, movewindow, d
bind = $mainMod ALT, left, movewindow, l
bind = $mainMod ALT, right, movewindow, r
bind = $mainMod ALT, up, movewindow, u
bind = $mainMod ALT, down, movewindow, d

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/Resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Special workspaces (scratchpad)
bind = $mainMod SHIFT, S, movetoworkspacesilent, special
bind = $mainMod, S, togglespecialworkspace,

bind = $mainMod SHIFT, Z, movetoworkspacesilent, special
bind = $mainMod, Z, togglespecialworkspace,

# Toggle Layout
bind = $mainMod, J, togglesplit, # dwindle

# Move window silently to workspace Super + Alt + [0-9]
bind = $mainMod ALT, 1, movetoworkspacesilent, 1
bind = $mainMod ALT, 2, movetoworkspacesilent, 2
bind = $mainMod ALT, 3, movetoworkspacesilent, 3
bind = $mainMod ALT, 4, movetoworkspacesilent, 4
bind = $mainMod ALT, 5, movetoworkspacesilent, 5
bind = $mainMod ALT, 6, movetoworkspacesilent, 6
bind = $mainMod ALT, 7, movetoworkspacesilent, 7
bind = $mainMod ALT, 8, movetoworkspacesilent, 8
bind = $mainMod ALT, 9, movetoworkspacesilent, 9
bind = $mainMod ALT, 0, movetoworkspacesilent, 10

bind = $mainMod ALT NUM_LOCK, 87, movetoworkspacesilent, 1
bind = $mainMod ALT NUM_LOCK, 88, movetoworkspacesilent, 2
bind = $mainMod ALT NUM_LOCK, 89, movetoworkspacesilent, 3
bind = $mainMod ALT NUM_LOCK, 83, movetoworkspacesilent, 4
bind = $mainMod ALT NUM_LOCK, 84, movetoworkspacesilent, 5
bind = $mainMod ALT NUM_LOCK, 85, movetoworkspacesilent, 6
bind = $mainMod ALT NUM_LOCK, 79, movetoworkspacesilent, 7
bind = $mainMod ALT NUM_LOCK, 80, movetoworkspacesilent, 8
bind = $mainMod ALT NUM_LOCK, 81, movetoworkspacesilent, 9

# Trigger when the switch is turning off
bindl= , switch:on:Lid Switch, exec, swaylock && systemctl suspend
#
# # Using Sway-OSD instead of hyprdots default scripts for OSD
# bindl  = , XF86AudioMute, exec, swayosd-client --output-volume mute-toggle # toggle audio mute
# bindl  = , XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle # toggle microphone mute
# bindel = , XF86AudioLowerVolume, exec, swayosd-client --output-volume lower --max-volume 120 # dNUM_LOCKecrease volume
# bindel = , XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise --max-volume 100 # increase volume
# bindl  = , XF86AudioPlay, exec, playerctl play-pause
# bindl  = , XF86AudioPause, exec, playerctl play-pause
# bindl  = , XF86AudioNext, exec, playerctl next
# bindl  = , XF86AudioPrev, exec, playerctl previous
#
# bindr = CAPS_LOCK, CAPS_LOCK, exec, swayosd-client --caps-lock
#
# # Brightness control
# bindel = , XF86MonBrightnessUp, exec, swayosd-client --brightness raise # increase brightness
# bindel = , XF86MonBrightnessDown, exec, swayosd-client --brightness lower # decrease brightness

# # Brightness control
bindel = , XF86MonBrightnessUp, exec, brightnessctl set 3%+ # increase brightness
bindel = , XF86MonBrightnessDown, exec, brightnessctl set 3%- # decrease brightness

# bind = , swipe:4:d, exec, ~/.config/hypr/scripts/dontkillsteam.sh

bind = $CONTROL, Space, exec, nwg-dock-hyprland -i 64 -mb 0 -ml 22 -mr 22 -nolauncher -x
exec-once = nwg-dock-hyprland -i 64 -mb 0 -ml 22 -mr 22 -nolauncher -x

bind = $mainMod, A, exec, nwg-drawer -wm hyprland -nofs -ovl -ft -spacing 30 -c 7 -mt 54 -mb 22 -ml 22 -mr 22

# use wev for getting key number and other I/O events on wayland
bind = $mainMod NUM_LOCK, 86 , exec, hyprctl keyword misc:cursor_zoom_factor "$(hyprctl getoption misc:cursor_zoom_factor | grep float | awk '{print $2 + 0.2}')"

bind = $mainMod NUM_LOCK, 82, exec, hyprctl keyword misc:cursor_zoom_factor "$(hyprctl getoption misc:cursor_zoom_factor | grep float | awk '{print $2 - 0.2}')"

bind = $mainMod NUM_LOCK, 104, exec, hyprctl keyword misc:cursor_zoom_factor 1

bind = $mainMod SHIFT, E, exec, emote

bind = $mainMod, T, exec, textsnatcher

bind = ,XF86PowerOff,  exec, ags -t powermenu

bind = $mainMod SHIFT, A, exec, ags -q ; ags

bind = $mainMod, period , exec, ags -t quicksettings

bind = $mainMod, comma, exec, ags -t datemenu
bind = $mainMod CTRL, space, exec, ags -t datemenu

bind  = $mainMod SHIFT, R, exec, ags -r 'recorder.start()'
